<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\stm32_m01_pc.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\stm32_m01_pc.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Wed Apr 20 15:50:22 2016
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[8]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">NMI_Handler</a><BR>
 <LI><a href="#[9]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">HardFault_Handler</a><BR>
 <LI><a href="#[a]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">MemManage_Handler</a><BR>
 <LI><a href="#[b]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">BusFault_Handler</a><BR>
 <LI><a href="#[c]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">UsageFault_Handler</a><BR>
 <LI><a href="#[d]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SVC_Handler</a><BR>
 <LI><a href="#[e]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">DebugMon_Handler</a><BR>
 <LI><a href="#[f]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">PendSV_Handler</a><BR>
 <LI><a href="#[10]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">SysTick_Handler</a><BR>
 <LI><a href="#[23]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[23]">ADC_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[b]">BusFault_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[25]">CAN1_RX0_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[26]">CAN1_RX1_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[27]">CAN1_SCE_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[24]">CAN1_TX_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[51]">CAN2_RX0_IRQHandler</a> from igs_can.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[52]">CAN2_RX1_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[53]">CAN2_SCE_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[50]">CAN2_TX_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[60]">CRYP_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[5f]">DCMI_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream0_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream1_IRQHandler</a> from igs_uart.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Stream2_IRQHandler</a> from igs_uart.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[1f]">DMA1_Stream3_IRQHandler</a> from igs_uart.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[20]">DMA1_Stream4_IRQHandler</a> from igs_uart.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[21]">DMA1_Stream5_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[22]">DMA1_Stream6_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[40]">DMA1_Stream7_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[49]">DMA2_Stream0_IRQHandler</a> from igs_spi.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[4a]">DMA2_Stream1_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream2_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream3_IRQHandler</a> from igs_spi.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream4_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[55]">DMA2_Stream5_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[56]">DMA2_Stream6_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[57]">DMA2_Stream7_IRQHandler</a> from igs_stm32_iap_app.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[e]">DebugMon_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[4e]">ETH_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[4f]">ETH_WKUP_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[17]">EXTI0_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[39]">EXTI15_10_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[18]">EXTI1_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[19]">EXTI2_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[1a]">EXTI3_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[1b]">EXTI4_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[28]">EXTI9_5_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[15]">FLASH_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[41]">FSMC_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[61]">HASH_RNG_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[9]">HardFault_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[31]">I2C1_ER_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[30]">I2C1_EV_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[33]">I2C2_ER_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[32]">I2C2_EV_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[5a]">I2C3_ER_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[59]">I2C3_EV_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[a]">MemManage_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[8]">NMI_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[54]">OTG_FS_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[3b]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[5c]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[5b]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[5e]">OTG_HS_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[5d]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[12]">PVD_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[f]">PendSV_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[16]">RCC_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[3a]">RTC_Alarm_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[14]">RTC_WKUP_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[7]">Reset_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[42]">SDIO_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[34]">SPI1_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[35]">SPI2_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[44]">SPI3_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[d]">SVC_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[10]">SysTick_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[62]">SystemInit</a> from system_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(.text)
 <LI><a href="#[13]">TAMP_STAMP_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[29]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[2c]">TIM1_CC_IRQHandler</a> from igs_fan.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[2b]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[2a]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[2d]">TIM2_IRQHandler</a> from igs_timer.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[2e]">TIM3_IRQHandler</a> from igs_pwm.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[2f]">TIM4_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[43]">TIM5_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[47]">TIM6_DAC_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[48]">TIM7_IRQHandler</a> from driver_timer.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[3c]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[3f]">TIM8_CC_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[3e]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[3d]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[5]">TIM_SetCompare1</a> from stm32f2xx_tim.o(.text) referenced 2 times from igs_pwm.o(.data)
 <LI><a href="#[4]">TIM_SetCompare2</a> from stm32f2xx_tim.o(.text) referenced 2 times from igs_pwm.o(.data)
 <LI><a href="#[3]">TIM_SetCompare3</a> from stm32f2xx_tim.o(.text) referenced 2 times from igs_pwm.o(.data)
 <LI><a href="#[6]">TIM_SetCompare4</a> from stm32f2xx_tim.o(.text) referenced 2 times from igs_fan.o(.data)
 <LI><a href="#[45]">UART4_IRQHandler</a> from igs_uart.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[46]">UART5_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[36]">USART1_IRQHandler</a> from igs_stm32_iap_app.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[37]">USART2_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[38]">USART3_IRQHandler</a> from igs_uart.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[58]">USART6_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[c]">UsageFault_Handler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[11]">WWDG_IRQHandler</a> from startup_stm32f2xx.o(.text) referenced from startup_stm32f2xx.o(RESET)
 <LI><a href="#[91]">__main</a> from __main.o(!!!main) referenced from startup_stm32f2xx.o(.text)
 <LI><a href="#[90]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[72]">acceptor_command</a> from igs_acceptor.o(.text) referenced from igs_acceptor.o(.text)
 <LI><a href="#[71]">acceptor_polling</a> from igs_acceptor.o(.text) referenced from igs_acceptor.o(.text)
 <LI><a href="#[87]">adc_polling</a> from igs_adc.o(.text) referenced from igs_adc.o(.text)
 <LI><a href="#[88]">battery_command</a> from igs_adc.o(.text) referenced from igs_adc.o(.text)
 <LI><a href="#[84]">can_rx_polling</a> from igs_can.o(.text) referenced from igs_can.o(.text)
 <LI><a href="#[74]">counter_command</a> from igs_counter.o(.text) referenced from igs_counter.o(.text)
 <LI><a href="#[73]">counter_polling</a> from igs_counter.o(.text) referenced from igs_counter.o(.text)
 <LI><a href="#[64]">debuf_led_toggle</a> from igs_ikv.o(.text) referenced from igs_ikv.o(.text)
 <LI><a href="#[70]">dispenser_command</a> from igs_dispenser.o(.text) referenced from igs_dispenser.o(.text)
 <LI><a href="#[6f]">dispenser_polling</a> from igs_dispenser.o(.text) referenced from igs_dispenser.o(.text)
 <LI><a href="#[89]">fan_command</a> from igs_fan.o(.text) referenced from igs_fan.o(.text)
 <LI><a href="#[8a]">fan_polling</a> from igs_fan.o(.text) referenced from igs_fan.o(.text)
 <LI><a href="#[8f]">fputc</a> from driver_usart.o(.text) referenced from _printf_char_file.o(.text)
 <LI><a href="#[69]">gpio_command</a> from igs_gpio.o(.text) referenced from igs_gpio.o(.text)
 <LI><a href="#[6a]">gpio_command_set_switch_mask</a> from igs_gpio.o(.text) referenced from igs_gpio.o(.text)
 <LI><a href="#[8e]">handler_command</a> from igs_handler.o(.text) referenced from igs_handler.o(.text)
 <LI><a href="#[8d]">handler_polling</a> from igs_handler.o(.text) referenced from igs_handler.o(.text)
 <LI><a href="#[83]">igs_can_command</a> from igs_can.o(.text) referenced from igs_can.o(.text)
 <LI><a href="#[141]">igs_gpio_toggle_led1</a> from igs_gpio.o(.text) referenced from igs_gpio.o(.text)
 <LI><a href="#[142]">igs_gpio_toggle_led2</a> from igs_gpio.o(.text) referenced from igs_gpio.o(.text)
 <LI><a href="#[133]">igs_ikv_polling</a> from igs_ikv.o(.text) referenced from igs_ikv.o(.text)
 <LI><a href="#[65]">ikv_command</a> from igs_ikv.o(.text) referenced from igs_ikv.o(.text)
 <LI><a href="#[66]">ikv_command_challenge_polling</a> from igs_ikv.o(.text) referenced from igs_ikv.o(.text)
 <LI><a href="#[68]">ikv_command_nvm_read_polling</a> from igs_ikv.o(.text) referenced from igs_ikv.o(.text)
 <LI><a href="#[67]">ikv_command_nvm_write_polling</a> from igs_ikv.o(.text) referenced from igs_ikv.o(.text)
 <LI><a href="#[85]">marquee_commnad</a> from igs_marquee.o(.text) referenced from igs_marquee.o(.text)
 <LI><a href="#[86]">marquee_polling</a> from igs_marquee.o(.text) referenced from igs_marquee.o(.text)
 <LI><a href="#[6d]">protocol_rx_polling</a> from igs_protocol.o(.text) referenced from igs_protocol.o(.text)
 <LI><a href="#[6c]">pwg_debounce_routine</a> from igs_gpio.o(.text) referenced from igs_gpio.o(.text)
 <LI><a href="#[80]">pwm_in_command</a> from igs_pwm.o(.text) referenced from igs_pwm.o(.text)
 <LI><a href="#[81]">pwm_in_polling</a> from igs_pwm.o(.text) referenced from igs_pwm.o(.text)
 <LI><a href="#[82]">pwm_in_send_command_polling</a> from igs_pwm.o(.text) referenced from igs_pwm.o(.text)
 <LI><a href="#[7f]">pwm_out_command</a> from igs_pwm.o(.text) referenced from igs_pwm.o(.text)
 <LI><a href="#[8b]">scanKey_command</a> from igs_scankey.o(.text) referenced from igs_scankey.o(.text)
 <LI><a href="#[8c]">scanKey_polling</a> from igs_scankey.o(.text) referenced from igs_scankey.o(.text)
 <LI><a href="#[6e]">time_out_detector</a> from igs_protocol.o(.text) referenced from igs_protocol.o(.text)
 <LI><a href="#[7a]">uart4_init</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[7d]">uart4_polling</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[79]">uart4_rx_start</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[78]">uart4_tx_start</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[7b]">uart_command</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[7e]">uart_timeout_counter</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[6b]">updateIO</a> from igs_gpio.o(.text) referenced from igs_gpio.o(.text)
 <LI><a href="#[77]">usart3_init</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[7c]">usart3_polling</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[76]">usart3_rx_start</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
 <LI><a href="#[75]">usart3_tx_start</a> from igs_uart.o(.text) referenced from igs_uart.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[91]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[92]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[94]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[95]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[1b8]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[9a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[93]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[97]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[99]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[9b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1c3]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a0]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[7]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[1c2]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f2xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[62]"></a>SystemInit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, system_stm32f2xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(.text)
</UL>
<P><STRONG><a name="[114]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, system_stm32f2xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>DRIVER_BIF_Mode_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, driver_bifgpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_shutdown
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_SetTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toggleAndSetNextTriggerTick
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Config
</UL>

<P><STRONG><a name="[a5]"></a>DRIVER_BIF_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, driver_bifgpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_init
</UL>

<P><STRONG><a name="[a8]"></a>DRIVER_BIF_SetHigh</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_bifgpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_shutdown
</UL>

<P><STRONG><a name="[aa]"></a>DRIVER_BIF_SetLow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_bifgpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_shutdown
</UL>

<P><STRONG><a name="[ac]"></a>DRIVER_BIF_Toggle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_bifgpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toggleAndSetNextTriggerTick
</UL>

<P><STRONG><a name="[ae]"></a>DRIVER_BIF_GetValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_bifgpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>DRIVER_LED_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_polling
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_device
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Config
</UL>

<P><STRONG><a name="[b1]"></a>DRIVER_LED_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_polling
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_device
</UL>

<P><STRONG><a name="[b2]"></a>DRIVER_LED_Toggle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debuf_led_toggle
</UL>

<P><STRONG><a name="[b3]"></a>DRIVER_LED_Config</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, driver_led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_On
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_init
</UL>

<P><STRONG><a name="[102]"></a>DRIVER_TIMER_GetCurrState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_int
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_pkt
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_only
</UL>

<P><STRONG><a name="[b5]"></a>DRIVER_TIMER_SetTask</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_int
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_pkt
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_only
</UL>

<P><STRONG><a name="[106]"></a>DRIVER_BIF_GetPollResults</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_pkt
</UL>

<P><STRONG><a name="[fc]"></a>DRIVER_TIMER_GetTau</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_check_pkt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_guard_delay
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_get_tau
</UL>

<P><STRONG><a name="[fa]"></a>DRIVER_TIMER_SetTau</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_set_tau
</UL>

<P><STRONG><a name="[101]"></a>DRIVER_TIMER_Delayus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_reset_delay
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_shutdown
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_guard_delay
</UL>

<P><STRONG><a name="[b6]"></a>DRIVER_TIMER_Config</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_init
</UL>

<P><STRONG><a name="[48]"></a>TIM7_IRQHandler</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toggleAndSetNextTriggerTick
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_GetValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>DRIVER_USART_Config</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, driver_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[c1]"></a>DRIVER_USART_NVIC_Config</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, driver_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>

<P><STRONG><a name="[c3]"></a>DRIVER_USART_GetChar</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, driver_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_GetLine
</UL>

<P><STRONG><a name="[c6]"></a>DRIVER_USART_GetLine</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, driver_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_GetChar
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[8f]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, driver_usart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[115]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>NVIC_Init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_timer_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_NVIC_Config
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Config
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_in_command_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[1b4]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
</UL>

<P><STRONG><a name="[c9]"></a>GPIO_DeInit</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, stm32f2xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>

<P><STRONG><a name="[a4]"></a>GPIO_Init</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, stm32f2xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_Config
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Config
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Mode_Set
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_out_command_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[af]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f2xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_get_in_real
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSwitch
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSwitch
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwg_debounce_routine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateInput
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_GetValue
</UL>

<P><STRONG><a name="[a9]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_led3
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwg_debounce_routine
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Off
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_SetHigh
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_tx_start
</UL>

<P><STRONG><a name="[ab]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwg_debounce_routine
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_On
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_SetLow
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[140]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f2xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateOutput
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[ad]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f2xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_toggle_led3
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_toggle_led2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_toggle_led1
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Toggle
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Toggle
</UL>

<P><STRONG><a name="[be]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f2xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[cc]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[cb]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[df]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[a6]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_uart_init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_Config
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Config
</UL>

<P><STRONG><a name="[b7]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_timer_init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_Config
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[a7]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Config
</UL>

<P><STRONG><a name="[ca]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[cf]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_DeInit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[ce]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[cd]"></a>TIM_DeInit</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[b8]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_timer_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Config
</UL>

<P><STRONG><a name="[bb]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_timer_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Config
</UL>

<P><STRONG><a name="[173]"></a>TIM_OC1Init</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
</UL>

<P><STRONG><a name="[175]"></a>TIM_OC2Init</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
</UL>

<P><STRONG><a name="[177]"></a>TIM_OC3Init</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
</UL>

<P><STRONG><a name="[194]"></a>TIM_OC4Init</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
</UL>

<P><STRONG><a name="[5]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> igs_pwm.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> igs_pwm.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> igs_pwm.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>TIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> igs_fan.o(.data)
</UL>
<P><STRONG><a name="[174]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
</UL>

<P><STRONG><a name="[176]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
</UL>

<P><STRONG><a name="[178]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
</UL>

<P><STRONG><a name="[195]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
</UL>

<P><STRONG><a name="[d1]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[d6]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[d5]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[d3]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[d0]"></a>TIM_ICInit</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
</UL>

<P><STRONG><a name="[d7]"></a>TIM_PWMIConfig</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[197]"></a>TIM_GetCapture1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[17a]"></a>TIM_GetCapture3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[17b]"></a>TIM_GetCapture4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[196]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
</UL>

<P><STRONG><a name="[b9]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_timer_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Config
</UL>

<P><STRONG><a name="[179]"></a>TIM_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[bc]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[d8]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[da]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[dc]"></a>TIM_ETRConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[db]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[dd]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[de]"></a>USART_DeInit</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[bf]"></a>USART_Init</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[c0]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[c8]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[c5]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_GetChar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[16e]"></a>USART_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[c2]"></a>USART_ITConfig</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_NVIC_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[c4]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_GetChar
</UL>

<P><STRONG><a name="[16f]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[170]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f2xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[e0]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, stm32f2xx_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
</UL>

<P><STRONG><a name="[14e]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f2xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
</UL>

<P><STRONG><a name="[14f]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
</UL>

<P><STRONG><a name="[150]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f2xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
</UL>

<P><STRONG><a name="[e1]"></a>ADC_DeInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f2xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[18d]"></a>ADC_Init</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, stm32f2xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
</UL>

<P><STRONG><a name="[18c]"></a>ADC_CommonInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f2xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
</UL>

<P><STRONG><a name="[191]"></a>ADC_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
</UL>

<P><STRONG><a name="[18e]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, stm32f2xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
</UL>

<P><STRONG><a name="[192]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f2xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
</UL>

<P><STRONG><a name="[190]"></a>ADC_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
</UL>

<P><STRONG><a name="[18f]"></a>ADC_DMARequestAfterLastTransferCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
</UL>

<P><STRONG><a name="[e2]"></a>CAN_DeInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
</UL>

<P><STRONG><a name="[17e]"></a>CAN_Init</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
</UL>

<P><STRONG><a name="[183]"></a>CAN_FilterInit</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_command_init
</UL>

<P><STRONG><a name="[181]"></a>CAN_Transmit</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_command_data
</UL>

<P><STRONG><a name="[180]"></a>CAN_Receive</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
</UL>

<P><STRONG><a name="[182]"></a>CAN_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_command_init
</UL>

<P><STRONG><a name="[e3]"></a>CAN_GetITStatus</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
</UL>

<P><STRONG><a name="[17f]"></a>CAN_ClearITPendingBit</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
</UL>

<P><STRONG><a name="[1ab]"></a>FLASH_Unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Init
</UL>

<P><STRONG><a name="[e6]"></a>FLASH_GetStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[e5]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Launch
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_UserConfig
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_RDPConfig
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRPConfig
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramByte
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramDoubleWord
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllSectors
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[e7]"></a>FLASH_EraseSector</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Erase
</UL>

<P><STRONG><a name="[e8]"></a>FLASH_EraseAllSectors</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[e9]"></a>FLASH_ProgramDoubleWord</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[ea]"></a>FLASH_ProgramWord</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Write
</UL>

<P><STRONG><a name="[eb]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[ec]"></a>FLASH_ProgramByte</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[1b3]"></a>FLASH_OB_Unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>

<P><STRONG><a name="[ed]"></a>FLASH_OB_WRPConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>

<P><STRONG><a name="[ee]"></a>FLASH_OB_RDPConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[ef]"></a>FLASH_OB_UserConfig</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[f0]"></a>FLASH_OB_Launch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>

<P><STRONG><a name="[1b1]"></a>FLASH_OB_GetWRP</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_GetWriteProtectionStatus
</UL>

<P><STRONG><a name="[1ac]"></a>FLASH_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f2xx_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Init
</UL>

<P><STRONG><a name="[151]"></a>DMA_DeInit</STRONG> (Thumb, 272 bytes, Stack size 0 bytes, stm32f2xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[152]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, stm32f2xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_tx_start
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_tx_start
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[154]"></a>DMA_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f2xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_trigger
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_tx_start
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_rx_start
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_tx_start
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_rx_start
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[153]"></a>DMA_ITConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f2xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_tx_start
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_tx_start
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_init
</UL>

<P><STRONG><a name="[156]"></a>DMA_GetITStatus</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f2xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[157]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f2xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[f6]"></a>bif_reverse_byte_order</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bif_addr_io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_reverse
</UL>

<P><STRONG><a name="[f1]"></a>bif_write_addr_space</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, bif_addr_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_only
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_nvm_lockofs
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_write_registers
</UL>

<P><STRONG><a name="[f3]"></a>bif_read_addr_space</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, bif_addr_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_pkt
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_only
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_read_nvm
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_get_vendor_info
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_registers
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_reverse
</UL>

<P><STRONG><a name="[f5]"></a>bif_read_addr_reverse</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bif_addr_io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_space
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_reverse_byte_order
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_get_special_counters
</UL>

<P><STRONG><a name="[f7]"></a>bif_read_registers</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bif_addr_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_space
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_get_lockofs
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_nvm_lockofs
</UL>

<P><STRONG><a name="[f8]"></a>bif_write_registers</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bif_addr_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_write_addr_space
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_reset_bif
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_update_lockofs
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_nvm_lockofs
</UL>

<P><STRONG><a name="[f9]"></a>bif_set_tau</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bif_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_SetTau
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_set_bif_tau
</UL>

<P><STRONG><a name="[fb]"></a>bif_get_tau</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bif_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_GetTau
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_get_bif_tau
</UL>

<P><STRONG><a name="[100]"></a>bif_guard_delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bif_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Delayus
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_GetTau
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_int
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_pkt
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_only
</UL>

<P><STRONG><a name="[f2]"></a>bif_send_pkt_only</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, bif_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_guard_delay
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_make_pkt
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_SetTask
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_GetCurrState
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_id_search_next
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_space
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_write_addr_space
</UL>

<P><STRONG><a name="[103]"></a>bif_send_pkt_poll_int</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, bif_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_guard_delay
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_make_pkt
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_SetTask
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_GetCurrState
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_id_search_next
</UL>

<P><STRONG><a name="[104]"></a>bif_check_pkt</STRONG> (Thumb, 408 bytes, Stack size 0 bytes, bif_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_GetTau
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_pkt
</UL>

<P><STRONG><a name="[f4]"></a>bif_send_pkt_poll_pkt</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, bif_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_check_pkt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_guard_delay
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_make_pkt
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_GetPollResults
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_SetTask
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_GetCurrState
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_space
</UL>

<P><STRONG><a name="[107]"></a>bif_shutdown</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bif_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Delayus
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_SetLow
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_SetHigh
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
</UL>

<P><STRONG><a name="[108]"></a>bif_reset_delay</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bif_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Delayus
</UL>

<P><STRONG><a name="[ff]"></a>bif_treat_invert_flag</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, bif_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_make_pkt
</UL>

<P><STRONG><a name="[fe]"></a>bif_set_parity_bits</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, bif_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_make_pkt
</UL>

<P><STRONG><a name="[109]"></a>optiga_get_vendor_info</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, optiga.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_space
</UL>

<P><STRONG><a name="[10a]"></a>optiga_get_special_counters</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, optiga.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_reverse
</UL>

<P><STRONG><a name="[10b]"></a>optiga_set_bif_tau</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, optiga.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_set_tau
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_init
</UL>

<P><STRONG><a name="[10c]"></a>optiga_get_bif_tau</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, optiga.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_get_tau
</UL>

<P><STRONG><a name="[10d]"></a>optiga_get_lockofs</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, optiga_nvm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_registers
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_polling
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_update_lockofs
</UL>

<P><STRONG><a name="[10e]"></a>optiga_update_lockofs</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, optiga_nvm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_get_lockofs
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_nvm_lockofs
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_write_registers
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command
</UL>

<P><STRONG><a name="[110]"></a>optiga_read_nvm</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, optiga_nvm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_space
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
</UL>

<P><STRONG><a name="[138]"></a>optiga_async_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, optiga_async.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_device
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command
</UL>

<P><STRONG><a name="[13d]"></a>optiga_async_get_vendor_info</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, optiga_async.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_device
</UL>

<P><STRONG><a name="[13e]"></a>optiga_async_get_odc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, optiga_async.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_device
</UL>

<P><STRONG><a name="[132]"></a>optiga_async_process_challenge_response</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, optiga_async.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command_challenge_polling
</UL>

<P><STRONG><a name="[131]"></a>optiga_async_write_nvm</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, optiga_async.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command_nvm_write_polling
</UL>

<P><STRONG><a name="[12f]"></a>optiga_async_read_nvm</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, optiga_async.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command_nvm_read_polling
</UL>

<P><STRONG><a name="[112]"></a>optiga_async_reset_bif</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, optiga_async.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_write_registers
</UL>

<P><STRONG><a name="[113]"></a>optiga_async_pooling_bif</STRONG> (Thumb, 1092 bytes, Stack size 0 bytes, optiga_async.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_id_search_next
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_read_nvm
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_shutdown
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_only
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_write_registers
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_registers
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_addr_space
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_reverse_byte_order
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_polling
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_result
</UL>

<P><STRONG><a name="[9c]"></a>main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_main
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_get_time_tick
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[11a]"></a>igs_timer_init</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, igs_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[2d]"></a>TIM2_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, igs_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_main
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[118]"></a>igs_get_time_tick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, igs_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[117]"></a>igs_init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, igs_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_uart_init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_scanKey_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_queue_init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_marquee_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_handler_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_dispenser_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_counter_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_acceptor_init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>igs_task_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, igs_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[12c]"></a>igs_task_add</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, igs_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_uart_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_scanKey_init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_marquee_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_handler_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_dispenser_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_counter_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_acceptor_init
</UL>

<P><STRONG><a name="[137]"></a>igs_task_set_task</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, igs_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_polling
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_device
</UL>

<P><STRONG><a name="[119]"></a>igs_task_main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, igs_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133]"></a>igs_ikv_polling</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_set_task
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_get_lockofs
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Off
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_On
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_ikv.o(.text)
</UL>
<P><STRONG><a name="[11d]"></a>igs_ikv_init</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_device
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_set_bif_tau
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_TIMER_Config
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[141]"></a>igs_gpio_toggle_led1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_gpio.o(.text)
</UL>
<P><STRONG><a name="[142]"></a>igs_gpio_toggle_led2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_gpio.o(.text)
</UL>
<P><STRONG><a name="[143]"></a>igs_gpio_toggle_led3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_rx_polling
</UL>

<P><STRONG><a name="[144]"></a>igs_gpio_set_led3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_out_detector
</UL>

<P><STRONG><a name="[147]"></a>igs_gpio_set_out_buf</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_command
</UL>

<P><STRONG><a name="[11e]"></a>igs_gpio_init</STRONG> (Thumb, 352 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInput
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateOutput
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[163]"></a>igs_gpio_set_input_mask</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_addDevice
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_setIn
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_addDevice
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_addDevice
</UL>

<P><STRONG><a name="[164]"></a>igs_gpio_set_output_mask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_addDevice
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_setOut
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_out_command_init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;counter_addDevice
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_addDevice
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_addDevice
</UL>

<P><STRONG><a name="[14c]"></a>igs_gpio_set_out_real</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulseDevicePinSet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_command
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI5026_set
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byte_out
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_setOut
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_polling
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_set
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_init
</UL>

<P><STRONG><a name="[14d]"></a>igs_gpio_get_in_real</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_polling
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_polling
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_polling
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_polling
</UL>

<P><STRONG><a name="[123]"></a>igs_spi_init</STRONG> (Thumb, 424 bytes, Stack size 0 bytes, igs_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMACmd
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[155]"></a>igs_spi_trigger</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_rx_polling
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_init
</UL>

<P><STRONG><a name="[15a]"></a>igs_spi_check_rx</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, igs_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_rx_polling
</UL>

<P><STRONG><a name="[49]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, igs_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, igs_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[12b]"></a>igs_protocol_init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, igs_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_trigger
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[13b]"></a>igs_protocol_command_register</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_uart_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_scanKey_init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_pwm_init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_marquee_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_handler_init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_dispenser_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_counter_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_adc_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_acceptor_init
</UL>

<P><STRONG><a name="[161]"></a>pulseDevicePinSet</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_pulsedevice.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_counter_reset
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;counter_addDevice
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;counter_polling
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;counter_command
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_control
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_polling
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_addDevice
</UL>

<P><STRONG><a name="[120]"></a>igs_dispenser_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_dispenser.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[158]"></a>igs_dispenser_reset</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, igs_dispenser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_out_detector
</UL>

<P><STRONG><a name="[11f]"></a>igs_acceptor_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_acceptor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[121]"></a>igs_counter_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_counter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[159]"></a>igs_counter_reset</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, igs_counter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulseDevicePinSet
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_out_detector
</UL>

<P><STRONG><a name="[11b]"></a>igs_queue_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, igs_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[139]"></a>igs_queue_push</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, igs_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command
</UL>

<P><STRONG><a name="[12e]"></a>igs_queue_pop</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, igs_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command_challenge_polling
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command_nvm_write_polling
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command_nvm_read_polling
</UL>

<P><STRONG><a name="[124]"></a>igs_uart_init</STRONG> (Thumb, 236 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[1f]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USART3_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART4_IRQHandler</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[125]"></a>igs_pwm_init</STRONG> (Thumb, 386 bytes, Stack size 0 bytes, igs_pwm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[2e]"></a>TIM3_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, igs_pwm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture4
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture3
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>igs_can_init</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, igs_can.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_DeInit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[51]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, igs_can.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ClearITPendingBit
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GetITStatus
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[127]"></a>igs_marquee_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[128]"></a>igs_adc_init</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, igs_adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMARequestAfterLastTransferCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[149]"></a>igs_fan_set_speed</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, igs_fan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwg_debounce_routine
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command
</UL>

<P><STRONG><a name="[129]"></a>igs_fan_init</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, igs_fan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_set_speed
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[2c]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, igs_fan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[12d]"></a>igs_malloc</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, igs_malloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_setIn
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_setOut
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_polling
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_set_pattern
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_set_group
</UL>

<P><STRONG><a name="[12a]"></a>igs_scanKey_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_scankey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[185]"></a>marquee_chip_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, igs_marquee_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI6024_init
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_commnad
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_polling
</UL>

<P><STRONG><a name="[184]"></a>marquee_chip_set</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, igs_marquee_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI6803_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI5026_set
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI6024_set
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_dir_marquee_set
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_dir_marquee_set_repeat
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_polling
</UL>

<P><STRONG><a name="[136]"></a>igs_command_add_buf</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, igs_command.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInput
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateIO
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_polling
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_polling
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_polling
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_rx_polling
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_polling
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_polling
</UL>

<P><STRONG><a name="[134]"></a>igs_command_add_dat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSwitch
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSwitch
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_polling
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_polling
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_polling
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command_report
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_polling
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_rx_polling
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_in_send_command_polling
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_polling
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_polling
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_timeout_counter
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;counter_polling
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_control
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_polling
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_control
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_polling
</UL>

<P><STRONG><a name="[15f]"></a>igs_command_rst</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, igs_command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_tx_prepare
</UL>

<P><STRONG><a name="[135]"></a>igs_command_insert</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, igs_command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSwitch
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSwitch
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInput
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateIO
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_polling
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_polling
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_polling
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command_report
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_polling
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_rx_polling
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_in_send_command_polling
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart3_polling
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_polling
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_timeout_counter
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;counter_polling
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_control
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_polling
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_control
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_polling
</UL>

<P><STRONG><a name="[15e]"></a>igs_command_get</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, igs_command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_tx_prepare
</UL>

<P><STRONG><a name="[122]"></a>igs_handler_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_handler.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_protocol_command_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_init
</UL>

<P><STRONG><a name="[1aa]"></a>FLASH_If_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, flash_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1ad]"></a>FLASH_If_Erase</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, flash_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSector
</UL>

<P><STRONG><a name="[1af]"></a>FLASH_If_Write</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, flash_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
</UL>

<P><STRONG><a name="[1b0]"></a>FLASH_If_GetWriteProtectionStatus</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, flash_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetWRP
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSector
</UL>

<P><STRONG><a name="[1b2]"></a>FLASH_If_DisableWriteProtection</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, flash_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Launch
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRPConfig
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Unlock
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSector
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[36]"></a>USART1_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, igs_stm32_iap_app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[116]"></a>IAP_Init</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, igs_stm32_iap_app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, igs_stm32_iap_app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f2xx.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, noretval__2printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_USART_GetLine
</UL>

<P><STRONG><a name="[1bd]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, _printf_str.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[1b6]"></a>__printf</STRONG> (Thumb, 308 bytes, Stack size 0 bytes, __printf_flags_wp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[130]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_tx_prepare
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command_challenge_polling
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ikv_command_nvm_write_polling
</UL>

<P><STRONG><a name="[1b9]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[16c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_timeout_counter
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_command_init
</UL>

<P><STRONG><a name="[160]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_tx_prepare
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_polling
</UL>

<P><STRONG><a name="[1ba]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[105]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_pkt
</UL>

<P><STRONG><a name="[1bb]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[1bc]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[96]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[1be]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[1b5]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _printf_char_file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1bf]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _printf_char_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[1c0]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[98]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[9d]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1c1]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1b7]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1c4]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[199]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command_report
</UL>

<P><STRONG><a name="[1c6]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[19b]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command_report
</UL>

<P><STRONG><a name="[1c9]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[198]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command_report
</UL>

<P><STRONG><a name="[1c8]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[1c7]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[1c5]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[19a]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command_report
</UL>

<P><STRONG><a name="[1ca]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a2]"></a>SetSysClock</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, system_stm32f2xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[b4]"></a>toggleAndSetNextTriggerTick</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Toggle
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_BIF_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[d4]"></a>TI2_Config</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[d2]"></a>TI1_Config</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f2xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[e4]"></a>CheckITStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f2xx_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GetITStatus
</UL>

<P><STRONG><a name="[fd]"></a>bif_make_pkt</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, bif_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_treat_invert_flag
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_set_parity_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_int
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_pkt
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_only
</UL>

<P><STRONG><a name="[10f]"></a>update_nvm_lockofs</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, optiga_nvm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_write_registers
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_read_registers
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_write_addr_space
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_update_lockofs
</UL>

<P><STRONG><a name="[111]"></a>bif_id_search_next</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, optiga_async.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_poll_int
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bif_send_pkt_only
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
</UL>

<P><STRONG><a name="[64]"></a>debuf_led_toggle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_ikv.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>ikv_command_nvm_read_polling</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_queue_pop
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_read_nvm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_ikv.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>ikv_command_nvm_write_polling</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_queue_pop
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_write_nvm
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_ikv.o(.text)
</UL>
<P><STRONG><a name="[66]"></a>ikv_command_challenge_polling</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_queue_pop
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_process_challenge_response
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_ikv.o(.text)
</UL>
<P><STRONG><a name="[65]"></a>ikv_command</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_queue_push
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_update_lockofs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_ikv.o(.text)
</UL>
<P><STRONG><a name="[13a]"></a>init_device</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_result
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_task_set_task
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_get_odc
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_get_vendor_info
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_Off
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_LED_On
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_ikv_init
</UL>

<P><STRONG><a name="[13c]"></a>poll_result</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, igs_ikv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;optiga_async_pooling_bif
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_device
</UL>

<P><STRONG><a name="[13f]"></a>gpio_init</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_init
</UL>

<P><STRONG><a name="[145]"></a>updateInput</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInput
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateIO
</UL>

<P><STRONG><a name="[69]"></a>gpio_command</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_buf
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendInput
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_gpio.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>gpio_command_set_switch_mask</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSwitch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_gpio.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>pwg_debounce_routine</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_set_speed
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_gpio.o(.text)
</UL>
<P><STRONG><a name="[14a]"></a>updateOutput</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateIO
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_init
</UL>

<P><STRONG><a name="[6b]"></a>updateIO</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSwitch
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateOutput
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateInput
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_gpio.o(.text)
</UL>
<P><STRONG><a name="[146]"></a>sendInput</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateInput
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_command
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_init
</UL>

<P><STRONG><a name="[148]"></a>sendSwitch</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_command_set_switch_mask
</UL>

<P><STRONG><a name="[14b]"></a>updateSwitch</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, igs_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateIO
</UL>

<P><STRONG><a name="[6e]"></a>time_out_detector</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, igs_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_dispenser_reset
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_counter_reset
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_led3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_protocol.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>protocol_rx_polling</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, igs_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_cmd_process
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_tx_prepare
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checksum
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_check_rx
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_spi_trigger
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_toggle_led3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_protocol.o(.text)
</UL>
<P><STRONG><a name="[15b]"></a>get_checksum</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_cmd_process
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_tx_prepare
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_rx_polling
</UL>

<P><STRONG><a name="[15d]"></a>protocol_tx_prepare</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, igs_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_rst
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_get
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checksum
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_rx_polling
</UL>

<P><STRONG><a name="[15c]"></a>protocol_cmd_process</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, igs_protocol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_rx_polling
</UL>

<P><STRONG><a name="[162]"></a>dispenser_addDevice</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, igs_dispenser.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulseDevicePinSet
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_output_mask
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_input_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_command
</UL>

<P><STRONG><a name="[70]"></a>dispenser_command</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, igs_dispenser.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_control
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_rvi_set
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_addDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_dispenser.o(.text)
</UL>
<P><STRONG><a name="[6f]"></a>dispenser_polling</STRONG> (Thumb, 532 bytes, Stack size 0 bytes, igs_dispenser.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulseDevicePinSet
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_get_in_real
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_dispenser.o(.text)
</UL>
<P><STRONG><a name="[165]"></a>dispenser_rvi_set</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, igs_dispenser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_command
</UL>

<P><STRONG><a name="[166]"></a>dispenser_control</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, igs_dispenser.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispenser_command
</UL>

<P><STRONG><a name="[167]"></a>acceptor_addDevice</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, igs_acceptor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_output_mask
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_input_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_command
</UL>

<P><STRONG><a name="[72]"></a>acceptor_command</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, igs_acceptor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_control
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_report_delay_set
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_addDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_acceptor.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>acceptor_polling</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, igs_acceptor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_get_in_real
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_acceptor.o(.text)
</UL>
<P><STRONG><a name="[168]"></a>acceptor_report_delay_set</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, igs_acceptor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_command
</UL>

<P><STRONG><a name="[169]"></a>acceptor_control</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, igs_acceptor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulseDevicePinSet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acceptor_command
</UL>

<P><STRONG><a name="[74]"></a>counter_command</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, igs_counter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulseDevicePinSet
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;counter_addDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_counter.o(.text)
</UL>
<P><STRONG><a name="[73]"></a>counter_polling</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, igs_counter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulseDevicePinSet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_counter.o(.text)
</UL>
<P><STRONG><a name="[16a]"></a>counter_addDevice</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, igs_counter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulseDevicePinSet
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_output_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;counter_command
</UL>

<P><STRONG><a name="[16b]"></a>uart_command_init</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_command
</UL>

<P><STRONG><a name="[7b]"></a>uart_command</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_command_receive
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_command_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[7e]"></a>uart_timeout_counter</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>uart4_polling</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[7c]"></a>usart3_polling</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>uart4_init</STRONG> (Thumb, 426 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>uart4_rx_start</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[78]"></a>uart4_tx_start</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[77]"></a>usart3_init</STRONG> (Thumb, 430 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>usart3_rx_start</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[75]"></a>usart3_tx_start</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_uart.o(.text)
</UL>
<P><STRONG><a name="[16d]"></a>uart_command_receive</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, igs_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_command
</UL>

<P><STRONG><a name="[82]"></a>pwm_in_send_command_polling</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, igs_pwm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_pwm.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>pwm_in_polling</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, igs_pwm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> igs_pwm.o(.text)
</UL>
<P><STRONG><a name="[80]"></a>pwm_in_command</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, igs_pwm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_in_command_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_pwm.o(.text)
</UL>
<P><STRONG><a name="[172]"></a>pwm_out_command_init</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, igs_pwm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_output_mask
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_out_command
</UL>

<P><STRONG><a name="[7f]"></a>pwm_out_command</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, igs_pwm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_out_command_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_pwm.o(.text)
</UL>
<P><STRONG><a name="[171]"></a>pwm_in_command_init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, igs_pwm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_in_command
</UL>

<P><STRONG><a name="[84]"></a>can_rx_polling</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, igs_can.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_can.o(.text)
</UL>
<P><STRONG><a name="[83]"></a>igs_can_command</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, igs_can.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_command_init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_command_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_can.o(.text)
</UL>
<P><STRONG><a name="[17c]"></a>igs_can_command_data</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, igs_can.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_command
</UL>

<P><STRONG><a name="[17d]"></a>igs_can_command_init</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, igs_can.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ITConfig
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_FilterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_can_command
</UL>

<P><STRONG><a name="[86]"></a>marquee_polling</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_set
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_marquee.o(.text)
</UL>
<P><STRONG><a name="[186]"></a>marquee_command_set_group</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_commnad
</UL>

<P><STRONG><a name="[188]"></a>marquee_command_go</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_commnad
</UL>

<P><STRONG><a name="[187]"></a>marquee_command_init</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_output_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_commnad
</UL>

<P><STRONG><a name="[85]"></a>marquee_commnad</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_init
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_set_pattern
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_dir_marquee_set
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_dir_marquee_set_repeat
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_go
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_command_set_group
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_marquee.o(.text)
</UL>
<P><STRONG><a name="[18b]"></a>marquee_command_dir_marquee_set_repeat</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_set
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_commnad
</UL>

<P><STRONG><a name="[18a]"></a>marquee_command_dir_marquee_set</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_set
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_commnad
</UL>

<P><STRONG><a name="[189]"></a>marquee_command_set_pattern</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, igs_marquee.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_commnad
</UL>

<P><STRONG><a name="[88]"></a>battery_command</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, igs_adc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> igs_adc.o(.text)
</UL>
<P><STRONG><a name="[87]"></a>adc_polling</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, igs_adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_adc.o(.text)
</UL>
<P><STRONG><a name="[8a]"></a>fan_polling</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, igs_fan.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> igs_fan.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>fan_command</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, igs_fan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_fan_set_speed
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command_report
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_fan.o(.text)
</UL>
<P><STRONG><a name="[193]"></a>fan_command_report</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, igs_fan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fan_command
</UL>

<P><STRONG><a name="[19c]"></a>scanKey_command_init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, igs_scankey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_output_mask
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_input_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command
</UL>

<P><STRONG><a name="[8b]"></a>scanKey_command</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, igs_scankey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_setIn
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_setOut
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_scankey.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>scanKey_polling</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, igs_scankey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_get_in_real
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_malloc
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_scankey.o(.text)
</UL>
<P><STRONG><a name="[19d]"></a>scanKey_command_setOut</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, igs_scankey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_output_mask
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command
</UL>

<P><STRONG><a name="[19e]"></a>scanKey_command_setIn</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, igs_scankey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_input_mask
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanKey_command
</UL>

<P><STRONG><a name="[19f]"></a>byte_out</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, igs_marquee_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI6803_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI5026_set
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI6024_set
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI6024_init
</UL>

<P><STRONG><a name="[1a1]"></a>get_parity</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, igs_marquee_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI6024_set
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBI6024_init
</UL>

<P><STRONG><a name="[1a0]"></a>MBI6024_init</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, igs_marquee_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_parity
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byte_out
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_init
</UL>

<P><STRONG><a name="[1a2]"></a>MBI6024_set</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, igs_marquee_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_parity
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byte_out
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_set
</UL>

<P><STRONG><a name="[1a3]"></a>MBI5026_set</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, igs_marquee_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byte_out
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_set
</UL>

<P><STRONG><a name="[1a4]"></a>MBI6803_set</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, igs_marquee_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byte_out
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marquee_chip_set
</UL>

<P><STRONG><a name="[1a5]"></a>handler_addDevice</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, igs_handler.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_output_mask
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_input_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_command
</UL>

<P><STRONG><a name="[8e]"></a>handler_command</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, igs_handler.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_set_out_real
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_addDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_handler.o(.text)
</UL>
<P><STRONG><a name="[1a6]"></a>handler_type0</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, igs_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_polling
</UL>

<P><STRONG><a name="[8d]"></a>handler_polling</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, igs_handler.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_gpio_get_in_real
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_insert
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_dat
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igs_command_add_buf
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_type1
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_type2
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_type3
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_type0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> igs_handler.o(.text)
</UL>
<P><STRONG><a name="[1a9]"></a>handler_type3</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, igs_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_polling
</UL>

<P><STRONG><a name="[1a8]"></a>handler_type2</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, igs_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_polling
</UL>

<P><STRONG><a name="[1a7]"></a>handler_type1</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, igs_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_polling
</UL>

<P><STRONG><a name="[1ae]"></a>GetSector</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, flash_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_GetWriteProtectionStatus
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Erase
</UL>

<P><STRONG><a name="[90]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
